{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,QA2BvC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,CAAEN,WAAUC,UAEtBM,EAAO,CAAEP,WAAUC,YAClBA,MAlCPL,EAAQa,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAASC,OAAOjB,EAAQkB,SAASF,OAAOG,OACxCC,EAAOH,OAAOjB,EAAQkB,SAASE,KAAKD,OACtCE,EAAQJ,OAAOjB,EAAQkB,SAASb,MAAMc,OAEjCG,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAAG,CACnC,IAAIC,EAAWD,EAEfnB,EAAcoB,EAAUF,GACrBG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBP,EAAA4B,OAAOC,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAE1DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBP,EAAA4B,OAAOI,QAAQ,oBAAmCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAG5DkB,GAAY,EACZF,GAASD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const amount = Number(formRef.elements.amount.value);\n  const step = Number(formRef.elements.step.value);\n  let delay = Number(formRef.elements.delay.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    position += 1;\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","amount","Number","elements","value","step","delay1","i","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.367f535d.js.map"}